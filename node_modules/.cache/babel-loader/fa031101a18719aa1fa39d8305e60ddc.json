{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moatadil\\\\Desktop\\\\project\\\\myGithub\\\\expense\\\\src\\\\components\\\\context\\\\LoginContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\n\nconst LoginContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const user_logged_in = localStorage.getItem('isLoggedIn');\n\n    if (user_logged_in === 'true') {\n      setIsLoggedIn(user_logged_in);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem('isLoggedIn', true);\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LoginContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = LoginContextProvider;\nexport default LoginContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["C:/Users/moatadil/Desktop/project/myGithub/expense/src/components/context/LoginContext.js"],"names":["React","useEffect","LoginContext","createContext","isLoggedIn","onLogout","onLogin","email","password","LoginContextProvider","props","setIsLoggedIn","useState","user_logged_in","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACrCC,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFmB;AAGrCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHK,CAApB,CAArB;;AAKA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;AAEFX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB;;AACE,QAAGF,cAAc,KAAK,MAAtB,EAA8B;AAC5BF,MAAAA,aAAa,CAACE,cAAD,CAAb;AACD;AACJ,GALQ,EAKP,EALO,CAAT;;AAMA,QAAMG,YAAY,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;AACxCM,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMO,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAIA,sBAAO,QAAC,YAAD,CAAc,QAAd;AACP,IAAA,KAAK,EAAE;AACHP,MAAAA,UAAU,EAAEA,UADT;AAEHC,MAAAA,QAAQ,EAACa,aAFN;AAGHZ,MAAAA,OAAO,EAAEU;AAHN,KADA;AAAA,cAOFN,KAAK,CAACU;AAPJ;AAAA;AAAA;AAAA;AAAA,UAAP;AASD,CA3BD;;GAAMX,oB;;KAAAA,oB;AA4BN,eAAeP,YAAf","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nconst LoginContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin: (email, password) => {}\r\n})\r\nconst LoginContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const user_logged_in = localStorage.getItem('isLoggedIn');\r\n      if(user_logged_in === 'true') {\r\n        setIsLoggedIn(user_logged_in);\r\n      }\r\n  },[])\r\n  const loginHandler = (email, password) => {\r\n    localStorage.setItem('isLoggedIn', true);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n  };\r\n  return <LoginContext.provider \r\n  value={{ \r\n      isLoggedIn: isLoggedIn,\r\n      onLogout:logoutHandler,\r\n      onLogin: loginHandler\r\n   }}\r\n  >\r\n      {props.children}\r\n  </LoginContext.provider>\r\n}\r\nexport default LoginContext"]},"metadata":{},"sourceType":"module"}