{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moatadil\\\\Desktop\\\\project\\\\myGithub\\\\expense\\\\src\\\\components\\\\MainApp\\\\ExpensesApp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Expenses from '../Expenses/Expenses';\nimport NewExpense from '..//NewExpense/NewExpense';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesApp() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const expense_data = JSON.parse(localStorage.getItem('expense_data')) || [];\n    setData(expense_data);\n  }, [data]);\n\n  const saveNewData = newData => {\n    setData(prevState => {\n      return [newData, ...prevState];\n    });\n    let expense_data = [];\n    expense_data = JSON.parse(localStorage.getItem('expense_data')) || [];\n    expense_data.push(data);\n    localStorage.setItem('expense_data', JSON.stringify(expense_data));\n  };\n\n  const deleteHandler = id => {\n    if (data.length > 0) {\n      const filterdDataHandler = data.filter(expense => {\n        if (expense.id !== id) return true;\n        return false;\n      });\n      setData(filterdDataHandler);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      saveNewData: saveNewData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      onDelete: deleteHandler,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ExpensesApp, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = ExpensesApp;\nexport default ExpensesApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesApp\");","map":{"version":3,"sources":["C:/Users/moatadil/Desktop/project/myGithub/expense/src/components/MainApp/ExpensesApp.js"],"names":["useState","useEffect","Expenses","NewExpense","ExpensesApp","data","setData","expense_data","JSON","parse","localStorage","getItem","saveNewData","newData","prevState","push","setItem","stringify","deleteHandler","id","length","filterdDataHandler","filter","expense"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAoD,EAAzE;AACAL,IAAAA,OAAO,CAACC,YAAD,CAAP;AACD,GAHQ,EAGP,CAACF,IAAD,CAHO,CAAT;;AAIA,QAAMO,WAAW,GAAGC,OAAO,IAAI;AAC7BP,IAAAA,OAAO,CAAEQ,SAAD,IAAe;AACrB,aAAO,CAACD,OAAD,EAAU,GAAGC,SAAb,CAAP;AACD,KAFM,CAAP;AAGA,QAAIP,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAoD,EAAnE;AACAJ,IAAAA,YAAY,CAACQ,IAAb,CAAkBV,IAAlB;AACAK,IAAAA,YAAY,CAACM,OAAb,CAAqB,cAArB,EAAqCR,IAAI,CAACS,SAAL,CAAeV,YAAf,CAArC;AACD,GARD;;AAUA,QAAMW,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAGd,IAAI,CAACe,MAAL,GAAc,CAAjB,EAAmB;AACjB,YAAMC,kBAAkB,GAAGhB,IAAI,CAACiB,MAAL,CAAYC,OAAO,IAAI;AAChD,YAAIA,OAAO,CAACJ,EAAR,KAAeA,EAAnB,EACE,OAAO,IAAP;AACF,eAAO,KAAP;AACD,OAJ0B,CAA3B;AAKAb,MAAAA,OAAO,CAACe,kBAAD,CAAP;AACD;AACF,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAET;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEM,aAApB;AAAmC,MAAA,IAAI,EAAEb;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAhCQD,W;;KAAAA,W;AAkCT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Expenses from '../Expenses/Expenses'\r\nimport NewExpense from '..//NewExpense/NewExpense'\r\n\r\nfunction ExpensesApp() {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n      const expense_data = JSON.parse(localStorage.getItem('expense_data')) || [];\r\n      setData(expense_data)\r\n    },[data])\r\n    const saveNewData = newData => {\r\n      setData((prevState) => {\r\n        return [newData, ...prevState]\r\n      })\r\n      let expense_data = []\r\n      expense_data = JSON.parse(localStorage.getItem('expense_data')) || [];\r\n      expense_data.push(data);\r\n      localStorage.setItem('expense_data', JSON.stringify(expense_data));\r\n    }\r\n    \r\n    const deleteHandler = (id) => {\r\n      if(data.length > 0){\r\n        const filterdDataHandler = data.filter(expense => {\r\n          if (expense.id !== id)\r\n            return true;\r\n          return false;\r\n        })\r\n        setData(filterdDataHandler)  \r\n      }\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <NewExpense saveNewData={saveNewData} />\r\n        <Expenses onDelete={deleteHandler} data={data} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpensesApp"]},"metadata":{},"sourceType":"module"}