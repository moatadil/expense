{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moatadil\\\\Desktop\\\\project\\\\myGithub\\\\expense\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const user_logged_in = localStorage.getItem('isLoggedIn');\n\n    if (user_logged_in) {\n      setIsLoggedIn(user_logged_in);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', true);\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/moatadil/Desktop/project/myGithub/expense/src/App.js"],"names":["Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","useState","useEffect","user_logged_in","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB;;AACA,QAAGF,cAAH,EAAmB;AACjBH,MAAAA,aAAa,CAACG,cAAD,CAAb;AACD;AACF,GALQ,EAKP,EALO,CAAT;;AAMA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMU,aAAa,GAAG,MAAM;AAC1BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAED,UAA7B;AAAyC,MAAA,QAAQ,EAAEW;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACX,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGP,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7BD;;GAAMZ,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const user_logged_in = localStorage.getItem('isLoggedIn');\n    if(user_logged_in) {\n      setIsLoggedIn(user_logged_in);\n    }\n  },[])\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', true);\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}