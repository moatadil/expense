{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moatadil\\\\Desktop\\\\project\\\\myGithub\\\\expense\\\\src\\\\components\\\\context\\\\LoginContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n  dark: '#161d31'\n});\nexport const LoginContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [dark, setDark] = useState('#161d31');\n  useEffect(() => {\n    const user_logged_in = localStorage.getItem('isLoggedIn');\n\n    if (user_logged_in === 'true') {\n      setIsLoggedIn(user_logged_in);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem('isLoggedIn', true);\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      dark: dark,\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LoginContextProvider, \"IgnKhbcmBMXojbRwoFZRKret4Ug=\");\n\n_c = LoginContextProvider;\nexport default LoginContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["C:/Users/moatadil/Desktop/project/myGithub/expense/src/components/context/LoginContext.js"],"names":["React","useState","useEffect","LoginContext","createContext","isLoggedIn","onLogout","onLogin","email","password","dark","LoginContextProvider","props","setIsLoggedIn","setDark","user_logged_in","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACrCC,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,QAAQ,EAAE,MAAM,CAAG,CAFkB;AAGrCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAG,CAHI;AAIrCC,EAAAA,IAAI,EAAE;AAJ+B,CAApB,CAArB;AAMA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACP,UAAD,EAAaQ,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOI,OAAP,IAAkBb,QAAQ,CAAC,SAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB;;AACA,QAAIF,cAAc,KAAK,MAAvB,EAA+B;AAC3BF,MAAAA,aAAa,CAACE,cAAD,CAAb;AACH;AACJ,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMG,YAAY,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;AACtCO,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAKA,QAAMO,aAAa,GAAG,MAAM;AACxBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAIA,sBAAO,QAAC,YAAD,CAAc,QAAd;AACH,IAAA,KAAK,EAAE;AACHH,MAAAA,IAAI,EAACA,IADF;AAEHL,MAAAA,UAAU,EAAEA,UAFT;AAGHC,MAAAA,QAAQ,EAAEc,aAHP;AAIHb,MAAAA,OAAO,EAAEW;AAJN,KADJ;AAAA,cAQFN,KAAK,CAACU;AARJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH,CA5BM;;GAAMX,oB;;KAAAA,oB;AA6Bb,eAAeR,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LoginContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => { },\r\n    onLogin: (email, password) => { },\r\n    dark: '#161d31'\r\n})\r\nexport const LoginContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [dark, setDark] = useState('#161d31');\r\n    useEffect(() => {\r\n        const user_logged_in = localStorage.getItem('isLoggedIn');\r\n        if (user_logged_in === 'true') {\r\n            setIsLoggedIn(user_logged_in);\r\n        }\r\n    }, [])\r\n    const loginHandler = (email, password) => {\r\n        localStorage.setItem('isLoggedIn', true);\r\n        setIsLoggedIn(true);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n        setIsLoggedIn(false);\r\n    };\r\n    return <LoginContext.Provider\r\n        value={{\r\n            dark:dark,\r\n            isLoggedIn: isLoggedIn,\r\n            onLogout: logoutHandler,\r\n            onLogin: loginHandler\r\n        }}\r\n    >\r\n        {props.children}\r\n    </LoginContext.Provider>\r\n}\r\nexport default LoginContext"]},"metadata":{},"sourceType":"module"}